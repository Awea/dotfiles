#! /usr/bin/env bash

# See: https://kvz.io/bash-best-practices.html
set -o errexit
set -o nounset
set -o pipefail

##########
# CONFIG #
##########

borgmatic_config=$DOTFILES/borgmatic/rsync.net.yml
pass_path=wearemd/rsync.net/awea
borg_repo=rsync.net:borg-repos/awea

## Default variable
export VERBOSE_FLAG=""
command=remote_backup

## Parse options
# Require gnu-getopt
OPTIONS=$(getopt -n "$0" -o rhbv --long "restore,help,break,verbose" -- "$@")
eval set -- "$OPTIONS"

while true ; do
  case "$1" in
    -r|--restore)
      command=restore_backup
      shift ;;
    -b|--break)
      command=break_lock
      shift ;;
    -v|--verbose)
      # --stats print statistics for the created archive
      export VERBOSE_FLAG="--verbosity 2 --stats"
      shift ;;
    -h|--help) help; exit 0 ;;
    --) shift ; break ;;
    *) help; exit 1;;
esac
done

#############
# FUNCTIONS #
#############

function help() {
  echo "usage: $(basename $0) [--remote|--help] [--verbose]"
}

function get_password() {
  # Get borg backup passphrase
  export BORG_PASSPHRASE="$(pass show ${1})"
}

function remote_backup() {
  get_password $pass_path
  # Backup the shit
  borgmatic -c $borgmatic_config ${VERBOSE_FLAG} create

  # Prune after the backup, I find that way better
  borgmatic -c $borgmatic_config ${VERBOSE_FLAG} prune
}

function restore_backup() {
  get_password $pass_path

  borgmatic -c $borgmatic_config extract \
    --archive latest \
    --path $HOME/.workspace $HOME/.ssh $HOME/.gnupg $HOME/.z $HOME/.zsh_history \
    --progress --destination /
}

function break_lock() {
  export BORG_REPO="${borg_repo}"
  borg break-lock ${VERBOSE_FLAG}
}

########
# MAIN #
########

# Run the script
$command
